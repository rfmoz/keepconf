                         ----------------------
                                 Keepconf
                          Configuration Manual
                         ----------------------
                             version 1.2.10
                               Ricardo F.
                             26/August/2015



============
| Abstract |
============

Keepconf is a agentless tool for backup and track files from remote hosts. It
uses rsync and git for the purpouse. Indeed, it can:
  - process lists of files/folders for retrieve it from hosts
  - limit size of the files fetched
  - allow different users for each host
  - manage groups of properties
  - store content in different defined directories
  - trigger hooks for execute whatever after/before fetching/committing
  - use a local or remote git repository
  - report the final status for monitoring the results in csv format


=================
| Prerequisites |
=================

Almost these version of the following software:

   python 2.7 with this modules:
      sys, optparse, os, glob, time, string, re, ConfigParser,
      tempfile, subprocess, distutils, collections
   rsync 3.0
   git 1.7

A ssh-keys connection to the target hosts. Password prompt is not supported.
** NOTE: Please, be sure that the configured user can connect to the target
host without any prompt.

A configuration file, recomended in "/etc/keepconf/keepconf.cfg"

Some free space for store the remote files.

In the remote hosts, only rsync and a ssh client.

============================
| Command line  parameters |
============================

There are only a few command line options :

    -h, --help            show this help message and exit
    -f FILE, --conf=FILE  configuration file
    -i, --init            initialize git repostory
    -n, --nocommit        avoid commit changes
    -c, --commitonly      only commit changes
    -m TEXT, --message=TEXT
                          commit message
    -s, --silent          silent fetching output
    -x, --xilent          silent commit output
    -v, --verbose         verbose output
    -V, --version         show version


-h, --help
  Print a quick reference of the command line parameters.

  Examples:
         keepconf -h
         keepconf --help


-f <FILE>, --conf=<FILE>
  Define the configuration file for use.

  Examples:
         keepconf -f /etc/keepconf/keepconf.conf  # (Default)
         keepconf -f /etc/keepconf/keepconf-client1.conf
         keepconf --conf /home/user1/myservers/production.conf


-i, --init
  Initialize repository, wich will be located at "d_dest" variable defined in
  the configuration file. Depends if "repo" variable is defined with local or
  remote repository, a fresh init or a clone will be done. If is not defined
  or is "False", any action will be done.

  Examples:
         keepconf -i
         keepconf -init


-n, --nocommit
  Avoid committing changes, executing "pre_commit" and "post_commit" scripts.
  Only fetching files and executing "pre_get" and "post_get" will be done.

  Examples:
         keepconf -n
         keepconf --nocommit


-c, --commitonly
  Avoid fetching files, executing "pre_get" and "post_get". Only commit
  operation and execution of "pre_commit" and "post_commit" will be done.

  Examples:
         keepconf -c
         keepconf --commitonly


-m, --message
  Substitute the default commit message with the text defined inside this
  option.

  Examples:
         keepconf -m 'Fixing issue with repo'
         keepconf --message 'Deleting old files from old hosts'


-s, --silent
  When rsync fetchs files, some information about their running state are
  printed trought the terminal. For silent the rsync stdout and stderr
  use this option.

  Examples:
         keepconf -s
         keepconf --silent

-x, --xilent
  When git is execute, some information about their behaviour are printed
  trought the terminal. For silent git stdout and stderr use this option.

  Examples:
         keepconf -x
         keepconf --xilent


-v, --verbose
  Print a lot of information about the internals of keepconf. Good for
  debugging how it gets the variables from files and the backgroud behaviour.

  Examples:
         keepconf -v
         keepconf --verbose


-V, --version:
  Print version number and exit.

  Examples:
         keepconf -V
         keepconf --version



======================
| Configuration file |
======================

Inside the configuration file, anything following a sharp ('#'), semicolon
(';') or comma character (',') is ignored. Space caracter is allowed, but
if is possible, avoid it.
All names of sections and variables must be only in lowercase.
Take care of the tabs and spaces at the beginning of each line, dont add any
of them.

[main]
  Section for general variables. The following are available inside here:

  d_conf=
    Directory for the hosts configuration files. It is a requirement for
    the basic behaviour of keepconf. See "Hosts configuration file format"
    section for more information about the files stored there. Require a
    full path definition.

    Example:
          d_conf = /etc/keepconf/hosts/

  d_dest=
    Directory for store the remote files and locate the repository. It is a
    requirement for the basic behaviour of keepconf. Rsync put there all
    files fetched inside a folder with the name of each host. A valid and
    empty dir is needed. If not exist, the initialize option creates it
    automatically. Require a full path definition.

    Example:
           d_dest = /var/keepconf/hosts/

  f_monitor=
    File for store the reports of execution. It is in csv format.

    Examples:
           f_monitor = /var/tmp/keepconf-mon.csv
           f_monitor = False  # (Default)


[sync]
  Section for fetching variables. The following are available inside here:

  fetch=
    Enable or disable fetching behaviour.

    Examples:
           fetch = True  # (Default)
           fetch = False

  pre_get=
    Directory for store the files that will be executed before fetching the
    files from the remote hosts.
    See "External scripts" section for more information.

    Examples:
           pre_get = /etc/keepconf/pre-get.d/
           pre_get = False  # (Default)

  post_get=
    Directory for store the files that will be executed after fetching the
    files from remote hosts.
    See "External scripts" section for more information.

    Examples:
           post_get = /etc/keepconf/post-get.d/
           post_get = False  # (Default)

  max_size=
    Global size limit for files to fetch. It must be a number followed by the
    initial of the size name.

    Examples:
           max_size = 25M  # (Default)
           max_size = 100K
           max_size = 1024B

  rsync_user=
    Global default user for connect to remote hosts via rsync.

    Examples:
           rsync_user = backup  # (Default)
           rsync_user = root

  rsync_opt=
    Common options for pass to rsync command. They must be a compact list
    like the example. By default:
      archive, recursive, preserve hard links, verbose, compress, copy links

    Examples:
           rsync_opt = arHvzL  # (Default)
           rsync_opt = ar
           rsync_opt = v

[vcs]
  Section for version control system variables. The following are available
  inside here:

  commit=
    Enable or disable commit behaviour.

    Examples:
           commit = True  # (Default)
           commit = False

  pre_commit=
    Directory for store the files that will be executed before committing
    files located inside "d_dest" directory. See "External scripts" section
    for more information.

    Examples:
           pre_commit = /etc/keepconf/pre-commit.d/
           pre_commit = False  # (Default)

  post_commit=
    Directory for store the files that will be executed after committing
    files located inside "d_dest" directory. See "External scripts" section
    for more information.

    Examples:
           post_commit = /etc/keepconf/pre-commit.d/
           post_commit = False  # (Default)

  repo=
    Type of git repository:
      "False" disable commit behaviour.
      "local" local repository located inside "d_dest" directory.
      "ssh://user@host/rute/to/repo" remote repository cloned into "d_dest".

    Examples:
           repo = False
           repo = "local"
           repo = "ssh://user@host/rute/to/repo"


====================
| External Scripts |
====================

Variables "pre_get", "post_get", "pre_commit" and "post_commit" defines a
folder wich all files into it with execution permissions are executed. But
executed in diferent stages of the flow:

pre-get -> fetch files -> post-get -> pre-commit -> commit -> post-commit

Two arguments are passed to each file when its executed, first is "d_conf" and
second is "d_dest".

The definition of the directory must be a complete route starting from the
root path.

Are a good point for include diferent particular tasks. For example:

- Locate a script inside "pre_get" or "post_get" for backup a swich, firewall,
appliance, whatever  device... wich need a particular process. Put the files
fetched inside a folder into "d_dest" directory and it will be tracked with
git as all other content.

- Execute keepconf with no commit option '-n' and put a script inside
"post_get" for call an other version control system, like subversion.

- Put a script inside "post_commit" directory for do some task after each
execution.

- Delete especial and binary files for avoid commit them. Actually this script
it is included into "post-commit.d" directory at the github repo.

Full path definition is required for this variables.


===================================
| Hosts configuration file format |
===================================

Each host file located into "d_conf" directory need to end with a '.cfg'
extension and can have this format and variables:

[main]
directory = /
max_size = 25M
rsync_user = root
[roles]
example1.cfg
example_dir/example2.cfg
[hosts]
host1
host2
[files]
/etc/
/home/
!/home/user1/
&/home/user1/.bashrc
/opt/mysw/conf/

Anything following a sharp ('#') a semicolon (';') or a comma (',') is
ignored. Space character is allowed, but if is possible, avoid it use.
Take care of the tabs and spaces at the beginning of each line, dont add any
of them.

The section headers are a must before include their respective variables.
Only one hosts must be defined for considering the file valid, the other
sections and variables are optional.

[main]
  Section for general variables. The following are available inside here:

  directory=
    Path for store the files fetched inside "d_dest" directory. Is a usefull
    option for separate different enviorments.

    If starts wiht a slash '/' it refers as a full path.
    If not starts with '/', the path will be: d_dest + directory + host name
    If directory is not set, the path will be: d_dest + host name

    Examples:
           directory = / # (Default)
           directory = web-servers/
           directory = web-servers/prod/

  max_size=
    Particular size limit for the files to fetch. It must be a number followed
    by the initial of the size name.

    Examples:
           max_size = 25M  # (Default)
           max_size = 100K
           max_size = 1024B

  rsync_user=
    Particular user for connect to remote hosts via rsync.

    Examples:
           rsync_user = backup  # (Default)
           rsync_user = root


[roles]
  Section for define a list of files for include their content as a group
  of properties (not hosts or other roles). One per line.
  This section is not allowed inside a role file.
  Upper in list have precedence over others, the main file located in 'd_conf'
  which have the roles references have precedence over all.

  For role files, this host configuration file format is required, but
  it have exceptions, "[roles]" and "[hosts]" section are not available.

  If starts wiht a slash '/' it refers as a full path.
  If not starts with '/' the path will be: d_conf + 'roles/' + path
  Its available the use of asterisk '*', interrogation '?' and ranges defined
  into brackets [1-25] for willcard match.

  Examples:
         [roles]
         host1.cfg
         production[1-5].cfg
         linux.cfg

         [roles]
         /etc/keepconf/hosts/roles/linux.cfg
         /etc/keepconf/hosts_def/roles/host1.cfg
         production[1-5].cfg


[hosts]
  Section for define the lists of hosts that will be fetched. One per line.
  Complete dns hostnames and IP are allowed.
  This option is not allowed inside a role files.
  For willcard match its only available the use of ranges defined into
  brackets [1-25]. A third argument can be passed to the range brackets
  [1-25-2] for change the step.

  Examples:
         [hosts]
         host1.prod
         192.168.5.12
         web-tier[1-10].prod.company


[files]
  Section for define the lists of files and paths that will be fetched.
  One per line. Folder must ends with slash '/' character.
  Its available the use of asterisk '*', interrogation '?' and ranges defined
  into brackets [1-25] for willcard match.
  Its possible to include, exclude or force paths:
      Include - Normal line path.
      Exclude - A '!' character must be before the path.
      Force - Based on the behaviour of rsync and how keepconf interact with
      it, exclude rules have precedence over includes. For force the include
      of a path inside a exclude match, add a '&' character before the path.

  Examples:
         [files]
         /etc/  # Include all /etc/ but not folders inside it
         /etc/* # Include folders inside it recursively
         /etc/apache2/sites-enabled/*.conf  # Include all files ended in conf
         !/etc/cron.d/  # Exclude cron.d folder
         &/etc/cron.d/myfile  # Force include inside a exclude rule match
         /home/user1/conf[1-15]*.conf  # Get a range of files ended in conf


===========
| Logging |
===========

For get a log of the behaviour, redirect sdout and/or stderr to a file in
execution time:

  Examples:
        keepconf > /var/log/keepconf.log  # Redirect stdout
        keepconf 2> /var/log/keepconf.log  # Redirect stderr
        keepconf &> /var/log/keepconf.log  # Redirect stdout and stderr


======================
| Schedule execution |
======================

For have a automate backup with a log, this line can be added to the cron
daemon:
15 06 * * * keepconf &> /var/log/keepconf.log

And for rotate the log generated, add a file called "keepconf" to
/etc/logrotate.d with this content:

/var/log/keepconf.log {
  rotate 12
  monthly
  compress
  missingok
}


================
| Some Toughts |
================

For avoid problems with section definition, range brackets are not allowed
at the beginning of a line.

By default, paths ended in '/' fetch all content inside it only, if ends with
'/*' fetch all content inside it recursively.

A munin pluging was written for graph the csv reports of keepconf, look for it
into the keepconf github account.

Inside the rsync call, the arguments StrictHostKeyChecking=no, LogLevel=quiet
and UserKnownHostsFile=/dev/null are passed for avoid annoying startup issues.

If you found any bugs, please report it with all information as you can
(a verbose output its helpfull). Thanks.

